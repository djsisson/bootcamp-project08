@tailwind base;
@tailwind components;
@tailwind utilities;

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  color-scheme: dark light;
  hanging-punctuation: first last;
}

html,
body {
  height: 100%;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* If you forget the sematic role (can be turned off) */
ul,
ol {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  line-height: 1.5;
  min-height: 100svh;
}

/* A elements that don't have a class get default styles (Turn off if nto wanted) */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

p,
li {
  text-wrap: pretty;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --fs1: 1rem;
  --fs2: 2rem;
  --fs3: 3rem;
  --boxshadow3: light-dark(hsla(0, 0%, 0%, 0.6), hsla(0, 0%, 100%, 0.8));
  --boxshadow2: light-dark(hsla(0, 0%, 0%, 0.4), hsla(0, 0%, 100%, 0.6));
  --boxshadow1: light-dark(hsla(0, 0%, 0%, 0.2), hsla(0, 0%, 100%, 0.4));
}

textarea,
input,
button {
  font-size: var(--fs1);
  font-family: inherit;
  border: none;
  border-radius: 8px;
  padding: 0.5rem 0.75rem;
  box-shadow: 0 0px 1px var(--boxshadow1), 0 1px 2px var(--boxshadow1);
  line-height: 1.5;
  margin: 0;
}
button {
  font-weight: 500;
  text-align: center;
}

textarea:hover,
input:hover,
button:hover {
  box-shadow: 0 0px 1px var(--boxshadow3), 0 1px 2px var(--boxshadow1);
  cursor: pointer;
}

button:active {
  box-shadow: 0 0px 1px var(--boxshadow2);
  transform: translateY(1px);
}

.icon-select {
  width: min(100px, 15svw);
  aspect-ratio: 1;
  border-radius: 50%;
  z-index: 15;
  position: relative;
  filter: saturate(0.8);
}

.icon-container[active="false"]:not(:hover) {
  filter: grayscale(50%);
}

.icon-select:hover,
.icon-container[active="true"]:not(:hover) {
  cursor: pointer;
  filter: saturate(2);
}

.icon-container {
  position: relative;
  --bgcolour: white;
  width: min(100px, 15svw);
}

.icon-container::after {
  position: absolute;
  content: " ";
  inset: 0;
  opacity: 0;
  z-index: 13;
  border-radius: 50%;
  width: 100%;
  transition: opacity 1s ease;
  background-image: conic-gradient(
    from 45deg,
    var(--bgcolour),
    white,
    var(--bgcolour)
  );
}

.icon-container::before {
  position: absolute;
  content: " ";
  inset: 0;
  opacity: 0;
  z-index: 13;
  border-radius: 50%;
  width: 100%;
  background-image: conic-gradient(
    from 135deg,
    var(--bgcolour),
    white,
    var(--bgcolour)
  );
  opacity: 1;
  transition: opacity 1s ease;
}

.icon-container:hover::after,
.icon-container[active="true"]::after {
  opacity: 1;
  box-shadow: 0 0 10px 5px var(--bgcolour);
}

.element-selector {
  background-repeat: no-repeat;
  width: var(--fs3);
  aspect-ratio: 1;
  cursor: pointer;
}

.element-selector[active="false"]:not(:hover) {
  filter: grayscale(50%);
}

.element-selector:hover,
.element-selector[active="true"] {
  cursor: pointer;
  filter: drop-shadow(5px 5px 4px var(--bgcolour)) saturate(2);
}
